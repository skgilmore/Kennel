[{"C:\\Users\\Stephanie\\workspace\\kennels\\src\\index.js":"1","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Kennel.js":"2","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\ApplicationViews.js":"3","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\nav\\NavBar.js":"4","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Home.js":"5","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\animal\\AnimalForm.js":"6","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\animal\\AnimalList.js":"7","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\animal\\AnimalProvider.js":"8","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\customer\\CustomerProvider.js":"9","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\customer\\CustomerList.js":"10","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Employee\\EmployeeProvider.js":"11","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Employee\\EmployeeList.js":"12","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Locations\\LocationsProvider.js":"13","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Locations\\LocationsList.js":"14","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\PropsAndState.js":"15","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\animal\\AnimalCard.js":"16","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Employee\\EmployeeCard.js":"17","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Locations\\LocationCard.js":"18","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\customer\\CustomerCard.js":"19","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Employee\\EmployeeForm.js":"20"},{"size":361,"mtime":1611606677422,"results":"21","hashOfConfig":"22"},{"size":245,"mtime":1611606677411,"results":"23","hashOfConfig":"22"},{"size":2282,"mtime":1611613840225,"results":"24","hashOfConfig":"22"},{"size":910,"mtime":1611606677421,"results":"25","hashOfConfig":"22"},{"size":415,"mtime":1611606677410,"results":"26","hashOfConfig":"22"},{"size":5081,"mtime":1611613612252,"results":"27","hashOfConfig":"22"},{"size":3026,"mtime":1611610636552,"results":"28","hashOfConfig":"22"},{"size":1216,"mtime":1611606677418,"results":"29","hashOfConfig":"22"},{"size":1224,"mtime":1611606677420,"results":"30","hashOfConfig":"22"},{"size":823,"mtime":1611611879204,"results":"31","hashOfConfig":"22"},{"size":1168,"mtime":1611606677408,"results":"32","hashOfConfig":"22"},{"size":1035,"mtime":1611611888692,"results":"33","hashOfConfig":"22"},{"size":1152,"mtime":1611606677414,"results":"34","hashOfConfig":"22"},{"size":800,"mtime":1611606677413,"results":"35","hashOfConfig":"22"},{"size":512,"mtime":1611606677415,"results":"36","hashOfConfig":"22"},{"size":456,"mtime":1611606677416,"results":"37","hashOfConfig":"22"},{"size":309,"mtime":1611614500581,"results":"38","hashOfConfig":"22"},{"size":292,"mtime":1611606677413,"results":"39","hashOfConfig":"22"},{"size":292,"mtime":1611606677419,"results":"40","hashOfConfig":"22"},{"size":3970,"mtime":1611614733660,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x980ki",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Stephanie\\workspace\\kennels\\src\\index.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Kennel.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\ApplicationViews.js",["88"],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\nav\\NavBar.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Home.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\animal\\AnimalForm.js",["89"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { LocationContext } from \"../Locations/LocationsProvider\"\r\nimport { AnimalContext } from \"../animal/AnimalProvider\"\r\nimport { CustomerContext } from \"../customer/CustomerProvider\"\r\nimport \"./Animal.css\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const AnimalForm = () => {\r\n    const { addAnimal } = useContext(AnimalContext)\r\n    const { locations, getLocations } = useContext(LocationContext)\r\n    const { customers, getCustomers } = useContext(CustomerContext)\r\n    // console.log(\"whatsLocations\", locations)\r\n    /*\r\n    With React, we do not target the DOM with `document.querySelector()`. Instead, our return (render) reacts to state or props.\r\n\r\n    Define the intial state of the form inputs with useState()\r\n    */\r\n\r\n    const [animal, setAnimal] = useState({\r\n      name: \"\",\r\n      breed: \"\",\r\n      locationId: 0,\r\n      customerId: 0\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    /*\r\n    Reach out to the world and get customers state\r\n    and locations state on initialization, so we can provide their data in the form dropdowns\r\n    */\r\n    useEffect(() => {\r\n     \r\n      getCustomers().then(getLocations)\r\n    }, [])\r\n\r\n    //when a field changes, update state. The return will re-render and display based on the values in state\r\n        // NOTE! What's happening in this function can be very difficult to grasp. Read it over many times and ask a lot questions about it.\r\n    //Controlled component\r\n    const handleControlledInputChange = (event) => {\r\n      /* When changing a state object or array,\r\n      always create a copy, make changes, and then set state.*/\r\n      const newAnimal = { ...animal }\r\n      let selectedVal = event.target.value\r\n      // forms always provide values as strings. But we want to save the ids as numbers. This will cover both customer and location ids\r\n      if (event.target.id.includes(\"Id\")) {\r\n        selectedVal = parseInt(selectedVal)\r\n      }\r\n      /* Animal is an object with properties.\r\n      Set the property to the new value\r\n      using object bracket notation. */\r\n      newAnimal[event.target.id] = selectedVal\r\n      // update state\r\n      setAnimal(newAnimal)\r\n    }\r\n\r\n    const handleClickSaveAnimal = (event) => {\r\n      event.preventDefault() //Prevents the browser from submitting the form\r\n\r\n      const locationId = animal.locationId\r\n      const customerId = animal.customerId\r\n\r\n      if (locationId === 0 || customerId === 0) {\r\n        window.alert(\"Please select a location and a customer\")\r\n      } else {\r\n        //invoke addAnimal passing animal as an argument.\r\n        //once complete, change the url and display the animal list\r\n        addAnimal(animal)\r\n        .then(() => history.push(\"/animals\"))\r\n      }\r\n    }\r\n\r\n    return (\r\n      <form className=\"animalForm\">\r\n          <h2 className=\"animalForm__title\">New Animal</h2>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Animal name:</label>\r\n                  <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Animal name\" value={animal.name}/>\r\n              </div>\r\n          </fieldset>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"breed\">Animal breed:</label>\r\n                  <input type=\"text\" id=\"breed\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Animal breed\" value={animal.breed}/>\r\n              </div>\r\n          </fieldset>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"location\">Assign to location: </label>\r\n                  <select defaultValue={animal.locationId} name=\"locationId\" id=\"locationId\" onChange={handleControlledInputChange} className=\"form-control\" >\r\n                      <option value=\"0\">Select a location</option>\r\n                      {locations.map(l => (\r\n                          <option key={l.id} value={l.id}>\r\n                              {l.name}\r\n                          </option>\r\n                      ))}\r\n                  </select>\r\n              </div>\r\n          </fieldset>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"customerId\">Customer: </label>\r\n                  <select defaultValue={animal.customerId} name=\"customer\" id=\"customerId\" onChange={handleControlledInputChange} className=\"form-control\" >\r\n                      <option value=\"0\">Select a customer</option>\r\n                      {customers.map(c => (\r\n                          <option key={c.id} value={c.id}>\r\n                              {c.name}\r\n                          </option>\r\n                      ))}\r\n                  </select>\r\n              </div>\r\n          </fieldset>\r\n          <button className=\"btn btn-primary\"\r\n            onClick={handleClickSaveAnimal}>\r\n            Save Animal\r\n          </button>\r\n      </form>\r\n    )\r\n}",["90","91"],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\animal\\AnimalList.js",["92","93","94"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { AnimalContext } from \"./AnimalProvider\"\r\nimport { AnimalCard } from \"./AnimalCard\"\r\nimport \"./Animal.css\"\r\nimport { CustomerContext } from \"../customer/CustomerProvider\"\r\nimport { LocationContext } from \"../Locations/LocationsProvider\"\r\n\r\n// useContext and useEffect are HOOKS\r\n// useContext lets you use data structures and functions that\r\n//  a parent provider component exposes. you must import the context obj\r\n// AnimalContext, so you can access the obj it exposes\r\n// The useEffect hook allows the component to reach out into the\r\n//  world for anything that cannot\r\n//  be handled during render. In this case, it is the API call for the animals.\r\n\r\n\r\n\r\nexport const AnimalList = () => {\r\n\r\n    // This state changes when `getAnimals()` is invoked below\r\n    // Be careful setting state within the useEffect. State changes cause \r\n    // a re-render. Re-render can invoke useEffect (depending on the dependency \r\n    //     array values). This would result in an infinate loop. \r\n    // Also other areas need this state change info!\r\n\r\n    const { animals, getAnimals } = useContext(AnimalContext)\r\n    const { locations, getLocations } = useContext(LocationContext)\r\n    const { customers, getCustomers } = useContext(CustomerContext)\r\n   \r\n    const history = useHistory()\r\n\r\n    //useEffect - reach out to the world for something\r\n    useEffect(() => {\r\n        console.log(\"AnimalList: Initial render before data\")\r\n        getLocations()\r\n            .then(getCustomers)\r\n            .then(getAnimals)\r\n    }, [])\r\n\r\n    return (\r\n            <div>\r\n\r\n             <button onClick={() => { history.push(\"/animals/create\") }}>\r\n                Add Animal\r\n              </button>\r\n\r\n        <div className=\"animals\">\r\n            {/* <h2>Animals</h2> */}\r\n            {\r\n                animals.map(animal => {\r\n                    const owner = customers.find(c => c.id === animal.customerId)\r\n                    return <AnimalCard key={animal.id} animal={animal} owner={owner} />\r\n                })\r\n            }\r\n        </div>\r\n        </div>\r\n    )\r\n    //  <Animal key={animal.id} animal={animal} />)}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // useEffect is kinda like asycronaus java bc its a callback function\r\n    // its  function holds a value that is a function\r\n    // similar to .then in weather in holiday world\r\n\r\n\r\n\r\n\r\n// line 16: you are returning an array of objects so that you can use the .map function\r\n// that is a method used on an array.\r\n\r\n// The dependency array. Logic within functions only occur when a function is invoked. Within \r\n// a React component, useEffect is a function. After the return, useEffect is \r\n// automatically invoked and since the dependency array is empty, it only runs the\r\n//  first time the component renders.\r\n\r\n\r\n// Use the .map() array method to iterate the array of animals and\r\n//  generate HTML for each one by invoking the AnimalCard component function.","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\animal\\AnimalProvider.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\customer\\CustomerProvider.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\customer\\CustomerList.js",["95"],"import React, { useContext, useEffect } from \"react\"\r\nimport { CustomerContext } from \"./CustomerProvider\"\r\nimport { CustomerCard } from \"./CustomerCard\"\r\nimport \"./Customer.css\"\r\n\r\n\r\n\r\nexport const CustomerList = () => {\r\n\r\n    const { customers, getCustomers } = useContext(CustomerContext)\r\n\r\n    //useEffect - reach out to the world for something\r\n    useEffect(() => {\r\n        console.log(\"CustomerList: useEffect - getCustomers\")\r\n        getCustomers()\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n         <div className=\"customers\">\r\n\r\n       \r\n            {console.log(\"CustomerList: Render\", customers)}\r\n            {\r\n                customers.map(customer => {\r\n                    return <CustomerCard key={customer.id} customer={customer} />\r\n                })\r\n            }\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n\r\n","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Employee\\EmployeeProvider.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Employee\\EmployeeList.js",["96"],"import React, { useContext, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { EmployeeContext } from \"./EmployeeProvider\"\r\nimport { EmployeeCard } from \"./EmployeeCard\"\r\nimport \"./Employee.css\"\r\n\r\n\r\n\r\nexport const EmployeeList = () => {\r\n\r\n    const { employees, getEmployees } = useContext(EmployeeContext)\r\n\r\n    //useEffect - reach out to the world for something\r\n    useEffect(() => {\r\n        console.log(\"EmployeeList: useEffect getEmployees\")\r\n        getEmployees()\r\n\r\n    }, [])\r\n  \r\n\r\n    const history = useHistory()\r\n    return (\r\n        <div className=\"employees\">\r\n            <div>\r\n        <button onClick={() => { history.push(\"/employees/create\") }}>\r\n        New Employee\r\n      </button>\r\n     \r\n            {console.log(\"EmployeeList: Render\", employees)}\r\n            {\r\n                employees.map(employee => {\r\n                    return <EmployeeCard key={employee.id} employee={employee} />\r\n                })\r\n            }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Locations\\LocationsProvider.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Locations\\LocationsList.js",["97"],"import React, { useContext, useEffect } from \"react\"\r\nimport { LocationContext } from \"./LocationsProvider\"\r\nimport { LocationCard } from \"./LocationCard\"\r\nimport \"./Location.css\"\r\n\r\n\r\n\r\nexport const LocationList = () => {\r\n\r\n    const { locations, getLocations } = useContext(LocationContext)\r\n\r\n    //useEffect - reach out to the world for something\r\n    useEffect(() => {\r\n        console.log(\"LocationList: useEffect getEmployees\")\r\n        getLocations()\r\n\r\n    }, [])\r\n  \r\n\r\n    return (\r\n        <div className=\"locations\">\r\n            {console.log(\"LocationList: Render\", locations)}\r\n            {\r\n                locations.map((location) => {\r\n                    return <LocationCard key={location.id} location={location} />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\PropsAndState.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\animal\\AnimalCard.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Employee\\EmployeeCard.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Locations\\LocationCard.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\customer\\CustomerCard.js",[],"C:\\Users\\Stephanie\\workspace\\kennels\\src\\components\\Employee\\EmployeeForm.js",["98"],{"ruleId":"99","severity":1,"message":"100","line":71,"column":1,"nodeType":"101","messageId":"102","endLine":75,"endColumn":22},{"ruleId":"103","severity":1,"message":"104","line":35,"column":8,"nodeType":"105","endLine":35,"endColumn":10,"suggestions":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":40,"nodeType":"113","messageId":"114","endLine":1,"endColumn":48},{"ruleId":"111","severity":1,"message":"115","line":28,"column":13,"nodeType":"113","messageId":"114","endLine":28,"endColumn":22},{"ruleId":"103","severity":1,"message":"116","line":39,"column":8,"nodeType":"105","endLine":39,"endColumn":10,"suggestions":"117"},{"ruleId":"103","severity":1,"message":"118","line":17,"column":8,"nodeType":"105","endLine":17,"endColumn":10,"suggestions":"119"},{"ruleId":"103","severity":1,"message":"120","line":18,"column":8,"nodeType":"105","endLine":18,"endColumn":10,"suggestions":"121"},{"ruleId":"103","severity":1,"message":"122","line":17,"column":8,"nodeType":"105","endLine":17,"endColumn":10,"suggestions":"123"},{"ruleId":"103","severity":1,"message":"122","line":33,"column":8,"nodeType":"105","endLine":33,"endColumn":10,"suggestions":"124"},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCustomers' and 'getLocations'. Either include them or remove the dependency array.","ArrayExpression",["125"],"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'locations' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAnimals', 'getCustomers', and 'getLocations'. Either include them or remove the dependency array.",["128"],"React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["129"],"React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.",["130"],"React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.",["131"],["132"],{"desc":"133","fix":"134"},"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},"Update the dependencies array to be: [getCustomers, getLocations]",{"range":"144","text":"145"},"Update the dependencies array to be: [getAnimals, getCustomers, getLocations]",{"range":"146","text":"147"},"Update the dependencies array to be: [getCustomers]",{"range":"148","text":"149"},"Update the dependencies array to be: [getEmployees]",{"range":"150","text":"151"},"Update the dependencies array to be: [getLocations]",{"range":"152","text":"153"},{"range":"154","text":"153"},[1225,1227],"[getCustomers, getLocations]",[1641,1643],"[getAnimals, getCustomers, getLocations]",[471,473],"[getCustomers]",[516,518],"[getEmployees]",[470,472],"[getLocations]",[1134,1136]]